From cd695f88a6d7bab3e968a17885fbb631f3c756e3 Mon Sep 17 00:00:00 2001
From: Roman Stratiienko <r.stratiienko@gmail.com>
Date: Thu, 22 Dec 2022 01:07:29 +0200
Subject: [PATCH 11/13] cros_gralloc: Use property to select custom backends

property name: vendor.gralloc.minigbm.backend
possible values:
1. auto (default)
2. gbm_mesa
3. dmaheaps

Change-Id: I5ab2649f98d40d139afb008ea8a804c790b81c31
Signed-off-by: Roman Stratiienko <r.stratiienko@gmail.com>
---
 cros_gralloc/cros_gralloc_driver.cc | 40 ++++++++++++++++++++++-------
 drv.c                               |  4 +--
 drv.h                               |  3 +++
 3 files changed, 36 insertions(+), 11 deletions(-)

diff --git a/cros_gralloc/cros_gralloc_driver.cc b/cros_gralloc/cros_gralloc_driver.cc
index ec872ec..730596c 100644
--- a/cros_gralloc/cros_gralloc_driver.cc
+++ b/cros_gralloc/cros_gralloc_driver.cc
@@ -7,6 +7,7 @@
 #include "cros_gralloc_driver.h"
 
 #include <cstdlib>
+#include <cutils/properties.h>
 #include <fcntl.h>
 #include <hardware/gralloc.h>
 #include <sys/mman.h>
@@ -72,7 +73,6 @@ cros_gralloc_driver *cros_gralloc_driver::get_instance()
 	return &s_instance;
 }
 
-#ifndef DRV_EXTERNAL
 static struct driver *init_try_node(int idx, char const *str)
 {
 	int fd;
@@ -113,6 +113,27 @@ static struct driver *init_try_nodes()
 	uint32_t min_card_node = DRM_CARD_NODE_START;
 	uint32_t max_card_node = (min_card_node + num_nodes);
 
+	char lib_name[PROPERTY_VALUE_MAX];
+	property_get("vendor.gralloc.minigbm.backend", lib_name, "auto");
+
+	if (strcmp(lib_name, "dmaheaps") == 0) {
+		ALOGI("Initializing dma-buf heaps backend");
+		drv = drv_create(DRV_DMAHEAPS_DRIVER);
+		if (drv)
+			return drv;
+
+		ALOGE("Failed to initialize dma-buf heap backend.");
+	}
+
+	if (strcmp(lib_name, "gbm_mesa") == 0) {
+		ALOGI("Initializing gbm_mesa backend");
+		drv = drv_create(DRV_GBM_MESA_DRIVER);
+		if (drv)
+			return drv;
+
+		ALOGE("Failed to initialize gbm_mesa backend.");
+	}
+
 	// Try render nodes...
 	for (uint32_t i = min_render_node; i < max_render_node; i++) {
 		drv = init_try_node(i, render_nodes_fmt);
@@ -127,18 +148,19 @@ static struct driver *init_try_nodes()
 			return drv;
 	}
 
-	return nullptr;
-}
+	/* Fallback to gbm_mesa which is a way smarter than dumb_driver */
+	if (strcmp(lib_name, "gbm_mesa") != 0) {
+		ALOGI("Falling-back to gbm_mesa backend");
+		drv = drv_create(DRV_GBM_MESA_DRIVER);
+		if (drv)
+			return drv;
+	}
 
-#else
+	ALOGE("Failed for find suitable backend");
 
-static struct driver *init_try_nodes()
-{
-	return drv_create(-1);
+	return nullptr;
 }
 
-#endif
-
 static void drv_destroy_and_close(struct driver *drv)
 {
 	int fd = drv_get_fd(drv);
diff --git a/drv.c b/drv.c
index f841911..adf19c1 100644
--- a/drv.c
+++ b/drv.c
@@ -115,12 +115,12 @@ struct driver *drv_create(int fd)
 
 
 #ifdef DRV_GBM_MESA
-	if (fd == -2) {
+	if (fd == DRV_GBM_MESA_DRIVER) {
 		drv->backend = &backend_gbm_mesa;
 	} else
 #endif
 #ifdef DRV_DMABUF_HEAP
-	if (fd == -3) {
+	if (fd == DRV_DMAHEAPS_DRIVER) {
 		drv->backend = &backend_dmabuf_heap;
 	} else
 #endif
diff --git a/drv.h b/drv.h
index 00cc064..905f2a8 100644
--- a/drv.h
+++ b/drv.h
@@ -16,6 +16,9 @@ extern "C" {
 #include <stdint.h>
 #include <stdlib.h>
 
+#define DRV_GBM_MESA_DRIVER (-2)
+#define DRV_DMAHEAPS_DRIVER (-3)
+
 #define DRV_MAX_PLANES 4
 
 // clang-format off
-- 
2.37.2

